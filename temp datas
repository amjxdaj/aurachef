mongodb+srv://aurachef2025:aura@2025@auracluster0.8kuvb.mongodb.net/?retryWrites=true&w=majority&appName=auracluster0


admin dashboard, analytics, setting manasge user icon css
{/* <div className="flex mt-8 mb-6 space-x-6"> */}
            {/* <div className="flex flex-col items-center text-white/80 hover:text-white transition-colors">
              <div className="w-12 h-12 rounded-lg glass flex items-center justify-center mb-2 transform hover:rotate-12 transition-transform relative overflow-hidden group">
                <div className="absolute inset-0 bg-white/10 group-hover:bg-white/20 transition-colors"></div>
                <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity">
                  <div className="w-full h-full bg-gradient-radial from-white/20 to-transparent"></div>
                </div>
                <Activity className="w-6 h-6 z-10" />
              </div>
              <span className="text-sm">Activity</span>
            </div> */}
            
            {/* <div className="flex flex-col items-center text-white/80 hover:text-white transition-colors">
              <div className="w-12 h-12 rounded-lg glass flex items-center justify-center mb-2 transform hover:rotate-12 transition-transform relative overflow-hidden group">
                <div className="absolute inset-0 bg-white/10 group-hover:bg-white/20 transition-colors"></div>
                <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity">
                  <div className="w-full h-full bg-gradient-radial from-white/20 to-transparent"></div>
                </div>
                <Database className="w-6 h-6 z-10" />
              </div>
              <span className="text-sm">Database</span>
            </div> */}
            
            {/* <div className="flex flex-col items-center text-white/80 hover:text-white transition-colors">
              <div className="w-12 h-12 rounded-lg glass flex items-center justify-center mb-2 transform hover:rotate-12 transition-transform relative overflow-hidden group">
                <div className="absolute inset-0 bg-white/10 group-hover:bg-white/20 transition-colors"></div>
                <div className="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity">
                  <div className="w-full h-full bg-gradient-radial from-white/20 to-transparent"></div>
                </div>
                <Settings className="w-6 h-6 z-10" />
              </div>
              <span className="text-sm">Settings</span>
            </div> */}
          {/* </div> */}











          return (
    <div className="min-h-screen pt-24 pb-12">
      <div className="page-transition max-w-5xl mx-auto">
        <div className="flex flex-col items-center mb-8">
          <div className="relative">
            <h1 className="text-4xl font-bold text-white text-shadow mb-2">
              Admin Dashboard
            </h1>
            <div className="absolute -bottom-4 left-1/2 transform -translate-x-1/2 w-32 h-1 bg-white/30 rounded-full"></div>
          </div>
        </div>

        <Card className="glass border-none bg-white/10 backdrop-blur-lg shadow-xl mb-8 overflow-hidden">
          <CardHeader className="pb-4">
            <div className="flex justify-between items-center">
              <CardTitle className="text-2xl font-semibold text-white">
                Pending Recipes
              </CardTitle>
              <div className="flex items-center">
                <div className="animate-pulse mr-2 w-2 h-2 rounded-full bg-green-400"></div>
                <span className="bg-white/20 px-3 py-1 rounded-full text-sm font-medium">
                  {pendingRecipes.length} recipes
                </span>
              </div>
            </div>
          </CardHeader>
          <CardContent>
            {pendingRecipes.length > 0 ? (
              <div className="space-y-6">
                {pendingRecipes.map((recipe) => (
                  <div
                    key={recipe._id}
                    className="glass bg-white/5 rounded-xl overflow-hidden transform transition-all hover:translate-y-[-5px] hover:shadow-lg group"
                  >
                    <div className="p-4 flex flex-col md:flex-row gap-4">
                      <div
                        className="md:w-32 h-24 md:h-24 bg-cover bg-center rounded-lg relative overflow-hidden"
                        style={{ backgroundImage: `url(${recipe.image})` }}
                      >
                        <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent opacity-0 group-hover:opacity-100 transition-opacity"></div>
                      </div>

                      <div className="flex-1">
                        <div className="flex flex-col md:flex-row md:items-center justify-between gap-2 mb-2">
                          <h3 className="text-xl font-semibold">
                            {recipe.title}{" "}
                            {/* ✅ Fix: Use title instead of name */}
                          </h3>
                          <div className="flex items-center space-x-2">
                            <button
                              onClick={() => handleApprove(recipe._id)}
                              className="p-2 bg-green-500/20 rounded-full hover:bg-green-500/40 transition-colors transform hover:scale-110 active:scale-95"
                              title="Approve recipe"
                            >
                              <Check className="w-5 h-5 text-green-400" />
                            </button>
                            <button
                              onClick={() => handleReject(recipe._id)}
                              className="p-2 bg-red-500/20 rounded-full hover:bg-red-500/40 transition-colors transform hover:scale-110 active:scale-95"
                              title="Reject recipe"
                            >
                              <X className="w-5 h-5 text-red-400" />
                            </button>
                          </div>
                        </div>

                        <div className="flex flex-wrap gap-x-4 gap-y-2 text-sm text-white/80 mb-2">
                          <p>
                            By:{" "}
                            <span className="font-medium">
                              {recipe.userId.name}{" "}
                              {/* ✅ Fix: Use userId.name */}
                            </span>
                          </p>
                          <p>
                            Submitted:{" "}
                            <span className="font-medium">
                              {new Date(recipe.createdAt).toLocaleDateString()}{" "}
                              {/* ✅ Fix: Format date */}
                            </span>
                          </p>
                          <p>
                            <span className="font-medium">
                              {recipe.caloriesPerServing}{" "}
                              {/* ✅ Fix: Use caloriesPerServing */}
                            </span>{" "}
                            calories
                          </p>
                          <p>
                            <span className="font-medium">
                              {recipe.prepTime}
                            </span>{" "}
                            prep
                          </p>
                        </div>

                        <Collapsible>
                          <CollapsibleTrigger
                            onClick={() => toggleExpandRecipe(recipe)}
                            className="flex items-center gap-1 text-white/70 hover:text-white transition-colors text-sm"
                          >
                            {expandedRecipe?._id ===
                            recipe._id /* ✅ Fix: Use _id instead of id */ ? (
                              <>
                                <ChevronUp className="w-4 h-4" />
                                <span>Hide details</span>
                              </>
                            ) : (
                              <>
                                <ChevronDown className="w-4 h-4" />
                                <span>View details</span>
                              </>
                            )}
                          </CollapsibleTrigger>

                          <CollapsibleContent>
                            {expandedRecipe?._id ===
                              recipe._id /* ✅ Fix: Use _id */ && (
                              <div className="mt-4 pt-4 border-t border-white/10 animate-fade-in">
                                <div className="grid md:grid-cols-2 gap-6">
                                  <div>
                                    <h4 className="font-semibold mb-2 flex items-center">
                                      <span className="w-1.5 h-1.5 bg-primary-light rounded-full mr-2"></span>
                                      Ingredients
                                    </h4>
                                    <ul className="list-disc pl-5 space-y-1">
                                      {recipe.ingredients.map(
                                        (ingredient, index) => (
                                          <li
                                            key={index}
                                            className="text-white/90"
                                          >
                                            {ingredient}
                                          </li>
                                        )
                                      )}
                                    </ul>
                                  </div>

                                  <div>
                                    <h4 className="font-semibold mb-2 flex items-center">
                                      <span className="w-1.5 h-1.5 bg-primary-light rounded-full mr-2"></span>
                                      Instructions
                                    </h4>
                                    <p className="whitespace-pre-line text-white/90">
                                      {recipe.instructions}
                                    </p>
                                  </div>
                                </div>
                              </div>
                            )}
                          </CollapsibleContent>
                        </Collapsible>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-8">
                <div className="mx-auto w-16 h-16 mb-4 rounded-full glass flex items-center justify-center">
                  <RotateCw className="w-8 h-8 text-white/50" />
                </div>
                <p className="text-white/80 mb-2">
                  No pending recipes to review.
                </p>
                <p className="text-white/60">All recipes have been reviewed!</p>
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default AdminDashboard;